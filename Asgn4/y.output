Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INT_CONSTANT
    3                   | FLOAT_CONSTANT
    4                   | CHAR_CONSTANT
    5                   | STRING_LITERAL
    6                   | LEFT_PARENTHESES expression RIGHT_PARANTHESES

    7 postfix_expression: primary_expression
    8                   | postfix_expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix_expression LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARANTHESES
   10                   | postfix_expression DOT IDENTIFIER
   11                   | postfix_expression ARROW IDENTIFIER
   12                   | postfix_expression INCREMENT
   13                   | postfix_expression DECREMENT
   14                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

   16 argument_expression_list_opt: argument_expression_list
   17                             | ε

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF LEFT_PARENTHESES typename RIGHT_PARANTHESES

   26 unary_operator: BITWISE_AND
   27               | ASTERISK
   28               | PLUS
   29               | MINUS
   30               | TILDE
   31               | EXCLAMATORY_MARK

   32 cast_expression: unary_expression
   33                | LEFT_PARENTHESES typename RIGHT_PARANTHESES cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression ASTERISK cast_expression
   36                          | multiplicative_expression FORWARD_SLASH cast_expression
   37                          | multiplicative_expression MODULO cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression PLUS multiplicative_expression
   40                    | additive_expression MINUS multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression LEFT_SHIFT additive_expression
   43                 | shift_expression RIGHT_SHIFT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_EQUAL shift_expression
   48                      | relational_expression GREATER_EQUAL shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression ISEQUAL relational_expression
   51                    | equality_expression NOTEQUAL relational_expression

   52 AND_expression: equality_expression
   53               | AND_expression BITWISE_AND equality_expression

   54 exclusive_OR_expression: AND_expression
   55                        | exclusive_OR_expression BITWISE_XOR AND_expression

   56 inclusive_OR_expression: exclusive_OR_expression
   57                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   58 logical_AND_expression: inclusive_OR_expression
   59                       | logical_AND_expression LOGICAL_AND inclusive_OR_expression

   60 logical_OR_expression: logical_AND_expression
   61                      | logical_OR_expression LOGICAL_OR logical_AND_expression

   62 conditional_expression: logical_OR_expression
   63                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_operator: EQUAL_TO
   67                    | MUL_ASSIGN
   68                    | DIV_ASSIGN
   69                    | MOD_ASSIGN
   70                    | ADD_ASSIGN
   71                    | SUB_ASSIGN
   72                    | LEFT_SHIFT_ASSIGN
   73                    | RIGHT_SHIFT_ASSIGN
   74                    | AND_ASSIGN
   75                    | XOR_ASSIGN
   76                    | OR_ASSIGN

   77 expression: assignment_expression
   78           | expression COMMA assignment_expression

   79 constant_expression: conditional_expression

   80 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   81 init_declarator_list_opt: init_declarator_list
   82                         | ε

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   84                       | type_specifier declaration_specifiers_opt
   85                       | type_qualifier declaration_specifiers_opt
   86                       | function_specifier declaration_specifiers_opt

   87 declaration_specifiers_opt: declaration_specifiers
   88                           | ε

   89 init_declarator_list: init_declarator
   90                     | init_declarator_list COMMA init_declarator

   91 init_declarator: declarator
   92                | declarator EQUAL_TO initializer

   93 storage_class_specifier: EXTERN
   94                        | STATIC
   95                        | AUTO
   96                        | REGISTER

   97 type_specifier: VOID
   98               | CHAR
   99               | SHORT
  100               | INT
  101               | LONG
  102               | FLOAT
  103               | DOUBLE
  104               | SIGNED
  105               | UNSIGNED
  106               | BOOL
  107               | COMPLEX
  108               | IMAGINARY
  109               | enum_specifier

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  111                         | type_qualifier specifier_qualifier_list_opt

  112 specifier_qualifier_list_opt: specifier_qualifier_list
  113                             | ε

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  115               | ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  116               | ENUM IDENTIFIER

  117 identifier_opt: IDENTIFIER
  118               | ε

  119 enumerator_list: enumerator
  120                | enumerator_list COMMA enumerator

  121 enumerator: IDENTIFIER
  122           | IDENTIFIER EQUAL_TO constant_expression

  123 type_qualifier: CONST
  124               | RESTRICT
  125               | VOLATILE

  126 function_specifier: INLINE

  127 declarator: pointer_opt direct_declarator

  128 pointer_opt: pointer
  129            | ε

  130 direct_declarator: IDENTIFIER
  131                  | LEFT_PARENTHESES declarator RIGHT_PARANTHESES
  132                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET
  136                  | direct_declarator LEFT_PARENTHESES parameter_type_list RIGHT_PARANTHESES
  137                  | direct_declarator LEFT_PARENTHESES identifier_list_opt RIGHT_PARANTHESES

  138 type_qualifier_list_opt: type_qualifier_list
  139                        | ε

  140 assignment_expression_opt: assignment_expression
  141                          | ε

  142 identifier_list_opt: identifier_list
  143                    | ε

  144 pointer: ASTERISK type_qualifier_list_opt
  145        | ASTERISK type_qualifier_list_opt pointer

  146 type_qualifier_list: type_qualifier
  147                    | type_qualifier_list type_qualifier

  148 parameter_type_list: parameter_list
  149                    | parameter_list COMMA ELLIPSIS

  150 parameter_list: parameter_declaration
  151               | parameter_list COMMA parameter_declaration

  152 parameter_declaration: declaration_specifiers declarator
  153                      | declaration_specifiers

  154 identifier_list: IDENTIFIER
  155                | identifier_list COMMA IDENTIFIER

  156 typename: specifier_qualifier_list

  157 initializer: assignment_expression
  158            | LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  159            | LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

  160 initializer_list: designation_opt initializer
  161                 | initializer_list COMMA designation_opt initializer

  162 designation_opt: designation
  163                | ε

  164 designation: designator_list EQUAL_TO

  165 designator_list: designator
  166                | designator_list designator

  167 designator: LEFT_SQUARE_BRACKET constant_expression RIGHT_SQUARE_BRACKET
  168           | DOT IDENTIFIER

  169 statement: labeled_statement
  170          | compound_statement
  171          | expression_statement
  172          | selection_statement
  173          | iteration_statement
  174          | jump_statement

  175 labeled_statement: IDENTIFIER COLON statement
  176                  | CASE constant_expression COLON statement
  177                  | DEFAULT COLON statement

  178 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE

  179 block_item_list_opt: block_item_list
  180                    | ε

  181 block_item_list: block_item
  182                | block_item_list block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: expression_opt SEMICOLON

  186 expression_opt: expression
  187               | ε

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement ELSE statement
  190                    | SWITCH LEFT_PARENTHESES expression RIGHT_PARANTHESES statement

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES statement
  192                    | DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES SEMICOLON
  193                    | FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement
  194                    | FOR LEFT_PARENTHESES declaration expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

  195 jump_statement: GOTO IDENTIFIER SEMICOLON
  196               | CONTINUE SEMICOLON
  197               | BREAK SEMICOLON
  198               | RETURN expression_opt SEMICOLON

  199 translation_unit: external_declaration
  200                 | translation_unit external_declaration

  201 external_declaration: function_definition
  202                     | declaration

  203 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  204 declaration_list_opt: declaration_list
  205                     | ε

  206 declaration_list: declaration
  207                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <idval> (258) 1 10 11 116 117 121 122 130 154 155 168 175 195
    INT_CONSTANT <intval> (259) 2
    FLOAT_CONSTANT <floatval> (260) 3
    CHAR_CONSTANT <charval> (261) 4
    STRING_LITERAL <strval> (262) 5
    ARROW (263) 11
    INCREMENT (264) 12 21
    DECREMENT (265) 13 22
    SIZEOF (266) 24 25
    LEFT_SHIFT (267) 42
    RIGHT_SHIFT (268) 43
    LESS_EQUAL (269) 47
    GREATER_EQUAL (270) 48
    ISEQUAL (271) 50
    NOTEQUAL (272) 51
    LOGICAL_AND (273) 59
    LOGICAL_OR (274) 61
    MUL_ASSIGN (275) 67
    DIV_ASSIGN (276) 68
    MOD_ASSIGN (277) 69
    ADD_ASSIGN (278) 70
    SUB_ASSIGN (279) 71
    LEFT_SHIFT_ASSIGN (280) 72
    RIGHT_SHIFT_ASSIGN (281) 73
    AND_ASSIGN (282) 74
    XOR_ASSIGN (283) 75
    OR_ASSIGN (284) 76
    EXTERN (285) 93
    STATIC (286) 94 133 134
    AUTO (287) 95
    REGISTER (288) 96
    VOID (289) 97
    CHAR (290) 98
    SHORT (291) 99
    INT (292) 100
    LONG (293) 101
    FLOAT (294) 102
    DOUBLE (295) 103
    SIGNED (296) 104
    UNSIGNED (297) 105
    BOOL (298) 106
    COMPLEX (299) 107
    IMAGINARY (300) 108
    CONST (301) 123
    RESTRICT (302) 124
    VOLATILE (303) 125
    INLINE (304) 126
    ELLIPSIS (305) 149
    ENUM (306) 114 115 116
    CASE (307) 176
    DEFAULT (308) 177
    IF (309) 188 189
    ELSE (310) 189
    SWITCH (311) 190
    FOR (312) 193 194
    DO (313) 192
    WHILE (314) 191 192
    GOTO (315) 195
    CONTINUE (316) 196
    BREAK (317) 197
    RETURN (318) 198
    LEFT_PARENTHESES (319) 6 9 14 15 25 33 131 136 137 188 189 190 191 192 193 194
    RIGHT_PARANTHESES (320) 6 9 14 15 25 33 131 136 137 188 189 190 191 192 193 194
    DOT (321) 10 168
    COMMA (322) 15 19 78 90 115 120 149 151 155 159 161
    LEFT_SQUARE_BRACKET (323) 8 132 133 134 135 167
    RIGHT_SQUARE_BRACKET (324) 8 132 133 134 135 167
    LEFT_CURLY_BRACE (325) 14 15 114 115 158 159 178
    RIGHT_CURLY_BRACE (326) 14 15 114 115 158 159 178
    LESS_THAN (327) 45
    GREATER_THAN (328) 46
    EQUAL_TO (329) 66 92 122 164
    BITWISE_AND (330) 26 53
    BITWISE_OR (331) 57
    BITWISE_XOR (332) 55
    ASTERISK (333) 27 35 135 144 145
    FORWARD_SLASH (334) 36
    PLUS (335) 28 39
    MINUS (336) 29 40
    MODULO (337) 37
    TILDE (338) 30
    EXCLAMATORY_MARK (339) 31
    QUESTION_MARK (340) 63
    COLON (341) 63 175 176 177
    SEMICOLON (342) 80 185 192 193 194 195 196 197 198


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    primary_expression (89)
        on left: 1 2 3 4 5 6
        on right: 7
    postfix_expression (90)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 8 9 10 11 12 13 20
    argument_expression_list_opt (91)
        on left: 16 17
        on right: 9
    argument_expression_list (92)
        on left: 18 19
        on right: 16 19
    unary_expression (93)
        on left: 20 21 22 23 24 25
        on right: 21 22 24 32 65
    unary_operator (94)
        on left: 26 27 28 29 30 31
        on right: 23
    cast_expression (95)
        on left: 32 33
        on right: 23 33 34 35 36 37
    multiplicative_expression (96)
        on left: 34 35 36 37
        on right: 35 36 37 38 39 40
    additive_expression (97)
        on left: 38 39 40
        on right: 39 40 41 42 43
    shift_expression (98)
        on left: 41 42 43
        on right: 42 43 44 45 46 47 48
    relational_expression (99)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equality_expression (100)
        on left: 49 50 51
        on right: 50 51 52 53
    AND_expression (101)
        on left: 52 53
        on right: 53 54 55
    exclusive_OR_expression (102)
        on left: 54 55
        on right: 55 56 57
    inclusive_OR_expression (103)
        on left: 56 57
        on right: 57 58 59
    logical_AND_expression (104)
        on left: 58 59
        on right: 59 60 61
    logical_OR_expression (105)
        on left: 60 61
        on right: 61 62 63
    conditional_expression (106)
        on left: 62 63
        on right: 63 64 79
    assignment_expression (107)
        on left: 64 65
        on right: 18 19 65 77 78 133 134 140 157
    assignment_operator (108)
        on left: 66 67 68 69 70 71 72 73 74 75 76
        on right: 65
    expression (109)
        on left: 77 78
        on right: 6 8 63 78 186 188 189 190 191 192
    constant_expression (110)
        on left: 79
        on right: 122 167 176
    declaration (111)
        on left: 80
        on right: 183 194 202 206 207
    init_declarator_list_opt (112)
        on left: 81 82
        on right: 80
    declaration_specifiers (113)
        on left: 83 84 85 86
        on right: 80 87 152 153 203
    declaration_specifiers_opt (114)
        on left: 87 88
        on right: 83 84 85 86
    init_declarator_list (115)
        on left: 89 90
        on right: 81 90
    init_declarator (116)
        on left: 91 92
        on right: 89 90
    storage_class_specifier (117)
        on left: 93 94 95 96
        on right: 83
    type_specifier (118)
        on left: 97 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 84 110
    specifier_qualifier_list (119)
        on left: 110 111
        on right: 112 156
    specifier_qualifier_list_opt (120)
        on left: 112 113
        on right: 110 111
    enum_specifier (121)
        on left: 114 115 116
        on right: 109
    identifier_opt (122)
        on left: 117 118
        on right: 114 115
    enumerator_list (123)
        on left: 119 120
        on right: 114 115 120
    enumerator (124)
        on left: 121 122
        on right: 119 120
    type_qualifier (125)
        on left: 123 124 125
        on right: 85 111 146 147
    function_specifier (126)
        on left: 126
        on right: 86
    declarator (127)
        on left: 127
        on right: 91 92 131 152 203
    pointer_opt (128)
        on left: 128 129
        on right: 127
    direct_declarator (129)
        on left: 130 131 132 133 134 135 136 137
        on right: 127 132 133 134 135 136 137
    type_qualifier_list_opt (130)
        on left: 138 139
        on right: 132 133 135 144 145
    assignment_expression_opt (131)
        on left: 140 141
        on right: 132
    identifier_list_opt (132)
        on left: 142 143
        on right: 137
    pointer (133)
        on left: 144 145
        on right: 128 145
    type_qualifier_list (134)
        on left: 146 147
        on right: 134 138 147
    parameter_type_list (135)
        on left: 148 149
        on right: 136
    parameter_list (136)
        on left: 150 151
        on right: 148 149 151
    parameter_declaration (137)
        on left: 152 153
        on right: 150 151
    identifier_list (138)
        on left: 154 155
        on right: 142 155
    typename (139)
        on left: 156
        on right: 14 15 25 33
    initializer (140)
        on left: 157 158 159
        on right: 92 160 161
    initializer_list (141)
        on left: 160 161
        on right: 14 15 158 159 161
    designation_opt (142)
        on left: 162 163
        on right: 160 161
    designation (143)
        on left: 164
        on right: 162
    designator_list (144)
        on left: 165 166
        on right: 164 166
    designator (145)
        on left: 167 168
        on right: 165 166
    statement (146)
        on left: 169 170 171 172 173 174
        on right: 175 176 177 184 188 189 190 191 192 193 194
    labeled_statement (147)
        on left: 175 176 177
        on right: 169
    compound_statement (148)
        on left: 178
        on right: 170 203
    block_item_list_opt (149)
        on left: 179 180
        on right: 178
    block_item_list (150)
        on left: 181 182
        on right: 179 182
    block_item (151)
        on left: 183 184
        on right: 181 182
    expression_statement (152)
        on left: 185
        on right: 171
    expression_opt (153)
        on left: 186 187
        on right: 185 193 194 198
    selection_statement (154)
        on left: 188 189 190
        on right: 172
    iteration_statement (155)
        on left: 191 192 193 194
        on right: 173
    jump_statement (156)
        on left: 195 196 197 198
        on right: 174
    translation_unit (157)
        on left: 199 200
        on right: 0 200
    external_declaration (158)
        on left: 201 202
        on right: 199 200
    function_definition (159)
        on left: 203
        on right: 201
    declaration_list_opt (160)
        on left: 204 205
        on right: 203
    declaration_list (161)
        on left: 206 207
        on right: 204 207


State 0

    0 $accept: • translation_unit $end

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   93 storage_class_specifier: EXTERN •

    $default  reduce using rule 93 (storage_class_specifier)


State 2

   94 storage_class_specifier: STATIC •

    $default  reduce using rule 94 (storage_class_specifier)


State 3

   95 storage_class_specifier: AUTO •

    $default  reduce using rule 95 (storage_class_specifier)


State 4

   96 storage_class_specifier: REGISTER •

    $default  reduce using rule 96 (storage_class_specifier)


State 5

   97 type_specifier: VOID •

    $default  reduce using rule 97 (type_specifier)


State 6

   98 type_specifier: CHAR •

    $default  reduce using rule 98 (type_specifier)


State 7

   99 type_specifier: SHORT •

    $default  reduce using rule 99 (type_specifier)


State 8

  100 type_specifier: INT •

    $default  reduce using rule 100 (type_specifier)


State 9

  101 type_specifier: LONG •

    $default  reduce using rule 101 (type_specifier)


State 10

  102 type_specifier: FLOAT •

    $default  reduce using rule 102 (type_specifier)


State 11

  103 type_specifier: DOUBLE •

    $default  reduce using rule 103 (type_specifier)


State 12

  104 type_specifier: SIGNED •

    $default  reduce using rule 104 (type_specifier)


State 13

  105 type_specifier: UNSIGNED •

    $default  reduce using rule 105 (type_specifier)


State 14

  106 type_specifier: BOOL •

    $default  reduce using rule 106 (type_specifier)


State 15

  107 type_specifier: COMPLEX •

    $default  reduce using rule 107 (type_specifier)


State 16

  108 type_specifier: IMAGINARY •

    $default  reduce using rule 108 (type_specifier)


State 17

  123 type_qualifier: CONST •

    $default  reduce using rule 123 (type_qualifier)


State 18

  124 type_qualifier: RESTRICT •

    $default  reduce using rule 124 (type_qualifier)


State 19

  125 type_qualifier: VOLATILE •

    $default  reduce using rule 125 (type_qualifier)


State 20

  126 function_specifier: INLINE •

    $default  reduce using rule 126 (function_specifier)


State 21

  114 enum_specifier: ENUM • identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  115               | ENUM • identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  116               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 118 (identifier_opt)

    identifier_opt  go to state 33


State 22

  202 external_declaration: declaration •

    $default  reduce using rule 202 (external_declaration)


State 23

   80 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
  203 function_definition: declaration_specifiers • declarator declaration_list_opt compound_statement

    ASTERISK  shift, and go to state 34

    SEMICOLON  reduce using rule 82 (init_declarator_list_opt)
    $default   reduce using rule 129 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   83 declaration_specifiers: storage_class_specifier • declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   84 declaration_specifiers: type_specifier • declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  109 type_specifier: enum_specifier •

    $default  reduce using rule 109 (type_specifier)


State 27

   85 declaration_specifiers: type_qualifier • declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   86 declaration_specifiers: function_specifier • declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit • $end
  200 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 46
    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  199 translation_unit: external_declaration •

    $default  reduce using rule 199 (translation_unit)


State 31

  201 external_declaration: function_definition •

    $default  reduce using rule 201 (external_declaration)


State 32

  116 enum_specifier: ENUM IDENTIFIER •
  117 identifier_opt: IDENTIFIER •

    LEFT_CURLY_BRACE  reduce using rule 117 (identifier_opt)
    $default          reduce using rule 116 (enum_specifier)


State 33

  114 enum_specifier: ENUM identifier_opt • LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  115               | ENUM identifier_opt • LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 48


State 34

  144 pointer: ASTERISK • type_qualifier_list_opt
  145        | ASTERISK • type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   80 declaration: declaration_specifiers init_declarator_list_opt • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 36

   81 init_declarator_list_opt: init_declarator_list •
   90 init_declarator_list: init_declarator_list • COMMA init_declarator

    COMMA  shift, and go to state 53

    $default  reduce using rule 81 (init_declarator_list_opt)


State 37

   89 init_declarator_list: init_declarator •

    $default  reduce using rule 89 (init_declarator_list)


State 38

   91 init_declarator: declarator •
   92                | declarator • EQUAL_TO initializer
  203 function_definition: declaration_specifiers declarator • declaration_list_opt compound_statement

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21
    EQUAL_TO   shift, and go to state 54

    LEFT_CURLY_BRACE  reduce using rule 205 (declaration_list_opt)
    $default          reduce using rule 91 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  127 declarator: pointer_opt • direct_declarator

    IDENTIFIER        shift, and go to state 59
    LEFT_PARENTHESES  shift, and go to state 60

    direct_declarator  go to state 61


State 40

  128 pointer_opt: pointer •

    $default  reduce using rule 128 (pointer_opt)


State 41

   87 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers_opt)


State 42

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 83 (declaration_specifiers)


State 43

   84 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 84 (declaration_specifiers)


State 44

   85 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 85 (declaration_specifiers)


State 45

   86 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 86 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end •

    $default  accept


State 47

  200 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 200 (translation_unit)


State 48

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE • enumerator_list RIGHT_CURLY_BRACE
  115               | ENUM identifier_opt LEFT_CURLY_BRACE • enumerator_list COMMA RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  146 type_qualifier_list: type_qualifier •

    $default  reduce using rule 146 (type_qualifier_list)


State 50

  144 pointer: ASTERISK type_qualifier_list_opt •
  145        | ASTERISK type_qualifier_list_opt • pointer

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 144 (pointer)

    pointer  go to state 65


State 51

  138 type_qualifier_list_opt: type_qualifier_list •
  147 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   80 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON •

    $default  reduce using rule 80 (declaration)


State 53

   90 init_declarator_list: init_declarator_list COMMA • init_declarator

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   92 init_declarator: declarator EQUAL_TO • initializer

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 78
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 102


State 55

  206 declaration_list: declaration •

    $default  reduce using rule 206 (declaration_list)


State 56

   80 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON

    ASTERISK  shift, and go to state 34

    SEMICOLON  reduce using rule 82 (init_declarator_list_opt)
    $default   reduce using rule 129 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  203 function_definition: declaration_specifiers declarator declaration_list_opt • compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 103

    compound_statement  go to state 104


State 58

  204 declaration_list_opt: declaration_list •
  207 declaration_list: declaration_list • declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 204 (declaration_list_opt)

    declaration              go to state 105
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  130 direct_declarator: IDENTIFIER •

    $default  reduce using rule 130 (direct_declarator)


State 60

  131 direct_declarator: LEFT_PARENTHESES • declarator RIGHT_PARANTHESES

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    declarator   go to state 106
    pointer_opt  go to state 39
    pointer      go to state 40


State 61

  127 declarator: pointer_opt direct_declarator •
  132 direct_declarator: direct_declarator • LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator • LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator • LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator • LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET
  136                  | direct_declarator • LEFT_PARENTHESES parameter_type_list RIGHT_PARANTHESES
  137                  | direct_declarator • LEFT_PARENTHESES identifier_list_opt RIGHT_PARANTHESES

    LEFT_PARENTHESES     shift, and go to state 107
    LEFT_SQUARE_BRACKET  shift, and go to state 108

    $default  reduce using rule 127 (declarator)


State 62

  121 enumerator: IDENTIFIER •
  122           | IDENTIFIER • EQUAL_TO constant_expression

    EQUAL_TO  shift, and go to state 109

    $default  reduce using rule 121 (enumerator)


State 63

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list • RIGHT_CURLY_BRACE
  115               | ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list • COMMA RIGHT_CURLY_BRACE
  120 enumerator_list: enumerator_list • COMMA enumerator

    COMMA              shift, and go to state 110
    RIGHT_CURLY_BRACE  shift, and go to state 111


State 64

  119 enumerator_list: enumerator •

    $default  reduce using rule 119 (enumerator_list)


State 65

  145 pointer: ASTERISK type_qualifier_list_opt pointer •

    $default  reduce using rule 145 (pointer)


State 66

  147 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 147 (type_qualifier_list)


State 67

   90 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 90 (init_declarator_list)


State 68

   91 init_declarator: declarator •
   92                | declarator • EQUAL_TO initializer

    EQUAL_TO  shift, and go to state 54

    $default  reduce using rule 91 (init_declarator)


State 69

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 70

    2 primary_expression: INT_CONSTANT •

    $default  reduce using rule 2 (primary_expression)


State 71

    3 primary_expression: FLOAT_CONSTANT •

    $default  reduce using rule 3 (primary_expression)


State 72

    4 primary_expression: CHAR_CONSTANT •

    $default  reduce using rule 4 (primary_expression)


State 73

    5 primary_expression: STRING_LITERAL •

    $default  reduce using rule 5 (primary_expression)


State 74

   21 unary_expression: INCREMENT • unary_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 112
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 113
    unary_operator      go to state 88


State 75

   22 unary_expression: DECREMENT • unary_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 112
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 114
    unary_operator      go to state 88


State 76

   24 unary_expression: SIZEOF • unary_expression
   25                 | SIZEOF • LEFT_PARENTHESES typename RIGHT_PARANTHESES

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 115
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 116
    unary_operator      go to state 88


State 77

    6 primary_expression: LEFT_PARENTHESES • expression RIGHT_PARANTHESES
   14 postfix_expression: LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_PARENTHESES • typename RIGHT_PARANTHESES cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    ENUM              shift, and go to state 21
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    typename                   go to state 122


State 78

  158 initializer: LEFT_CURLY_BRACE • initializer_list RIGHT_CURLY_BRACE
  159            | LEFT_CURLY_BRACE • initializer_list COMMA RIGHT_CURLY_BRACE

    DOT                  shift, and go to state 123
    LEFT_SQUARE_BRACKET  shift, and go to state 124

    $default  reduce using rule 163 (designation_opt)

    initializer_list  go to state 125
    designation_opt   go to state 126
    designation       go to state 127
    designator_list   go to state 128
    designator        go to state 129


State 79

   26 unary_operator: BITWISE_AND •

    $default  reduce using rule 26 (unary_operator)


State 80

   27 unary_operator: ASTERISK •

    $default  reduce using rule 27 (unary_operator)


State 81

   28 unary_operator: PLUS •

    $default  reduce using rule 28 (unary_operator)


State 82

   29 unary_operator: MINUS •

    $default  reduce using rule 29 (unary_operator)


State 83

   30 unary_operator: TILDE •

    $default  reduce using rule 30 (unary_operator)


State 84

   31 unary_operator: EXCLAMATORY_MARK •

    $default  reduce using rule 31 (unary_operator)


State 85

    7 postfix_expression: primary_expression •

    $default  reduce using rule 7 (postfix_expression)


State 86

    8 postfix_expression: postfix_expression • LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix_expression • LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARANTHESES
   10                   | postfix_expression • DOT IDENTIFIER
   11                   | postfix_expression • ARROW IDENTIFIER
   12                   | postfix_expression • INCREMENT
   13                   | postfix_expression • DECREMENT
   20 unary_expression: postfix_expression •

    ARROW                shift, and go to state 130
    INCREMENT            shift, and go to state 131
    DECREMENT            shift, and go to state 132
    LEFT_PARENTHESES     shift, and go to state 133
    DOT                  shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 135

    $default  reduce using rule 20 (unary_expression)


State 87

   32 cast_expression: unary_expression •
   65 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN          shift, and go to state 136
    DIV_ASSIGN          shift, and go to state 137
    MOD_ASSIGN          shift, and go to state 138
    ADD_ASSIGN          shift, and go to state 139
    SUB_ASSIGN          shift, and go to state 140
    LEFT_SHIFT_ASSIGN   shift, and go to state 141
    RIGHT_SHIFT_ASSIGN  shift, and go to state 142
    AND_ASSIGN          shift, and go to state 143
    XOR_ASSIGN          shift, and go to state 144
    OR_ASSIGN           shift, and go to state 145
    EQUAL_TO            shift, and go to state 146

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 147


State 88

   23 unary_expression: unary_operator • cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 149


State 89

   34 multiplicative_expression: cast_expression •

    $default  reduce using rule 34 (multiplicative_expression)


State 90

   35 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   36                          | multiplicative_expression • FORWARD_SLASH cast_expression
   37                          | multiplicative_expression • MODULO cast_expression
   38 additive_expression: multiplicative_expression •

    ASTERISK       shift, and go to state 150
    FORWARD_SLASH  shift, and go to state 151
    MODULO         shift, and go to state 152

    $default  reduce using rule 38 (additive_expression)


State 91

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   41 shift_expression: additive_expression •

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 41 (shift_expression)


State 92

   42 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   43                 | shift_expression • RIGHT_SHIFT additive_expression
   44 relational_expression: shift_expression •

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 44 (relational_expression)


State 93

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   49 equality_expression: relational_expression •

    LESS_EQUAL     shift, and go to state 157
    GREATER_EQUAL  shift, and go to state 158
    LESS_THAN      shift, and go to state 159
    GREATER_THAN   shift, and go to state 160

    $default  reduce using rule 49 (equality_expression)


State 94

   50 equality_expression: equality_expression • ISEQUAL relational_expression
   51                    | equality_expression • NOTEQUAL relational_expression
   52 AND_expression: equality_expression •

    ISEQUAL   shift, and go to state 161
    NOTEQUAL  shift, and go to state 162

    $default  reduce using rule 52 (AND_expression)


State 95

   53 AND_expression: AND_expression • BITWISE_AND equality_expression
   54 exclusive_OR_expression: AND_expression •

    BITWISE_AND  shift, and go to state 163

    $default  reduce using rule 54 (exclusive_OR_expression)


State 96

   55 exclusive_OR_expression: exclusive_OR_expression • BITWISE_XOR AND_expression
   56 inclusive_OR_expression: exclusive_OR_expression •

    BITWISE_XOR  shift, and go to state 164

    $default  reduce using rule 56 (inclusive_OR_expression)


State 97

   57 inclusive_OR_expression: inclusive_OR_expression • BITWISE_OR exclusive_OR_expression
   58 logical_AND_expression: inclusive_OR_expression •

    BITWISE_OR  shift, and go to state 165

    $default  reduce using rule 58 (logical_AND_expression)


State 98

   59 logical_AND_expression: logical_AND_expression • LOGICAL_AND inclusive_OR_expression
   60 logical_OR_expression: logical_AND_expression •

    LOGICAL_AND  shift, and go to state 166

    $default  reduce using rule 60 (logical_OR_expression)


State 99

   61 logical_OR_expression: logical_OR_expression • LOGICAL_OR logical_AND_expression
   62 conditional_expression: logical_OR_expression •
   63                       | logical_OR_expression • QUESTION_MARK expression COLON conditional_expression

    LOGICAL_OR     shift, and go to state 167
    QUESTION_MARK  shift, and go to state 168

    $default  reduce using rule 62 (conditional_expression)


State 100

   64 assignment_expression: conditional_expression •

    $default  reduce using rule 64 (assignment_expression)


State 101

  157 initializer: assignment_expression •

    $default  reduce using rule 157 (initializer)


State 102

   92 init_declarator: declarator EQUAL_TO initializer •

    $default  reduce using rule 92 (init_declarator)


State 103

  178 compound_statement: LEFT_CURLY_BRACE • block_item_list_opt RIGHT_CURLY_BRACE

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    EXTERN            shift, and go to state 1
    STATIC            shift, and go to state 2
    AUTO              shift, and go to state 3
    REGISTER          shift, and go to state 4
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    INLINE            shift, and go to state 20
    ENUM              shift, and go to state 21
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    declaration                go to state 182
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 183
    labeled_statement          go to state 184
    compound_statement         go to state 185
    block_item_list_opt        go to state 186
    block_item_list            go to state 187
    block_item                 go to state 188
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 104

  203 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement •

    $default  reduce using rule 203 (function_definition)


State 105

  207 declaration_list: declaration_list declaration •

    $default  reduce using rule 207 (declaration_list)


State 106

  131 direct_declarator: LEFT_PARENTHESES declarator • RIGHT_PARANTHESES

    RIGHT_PARANTHESES  shift, and go to state 194


State 107

  136 direct_declarator: direct_declarator LEFT_PARENTHESES • parameter_type_list RIGHT_PARANTHESES
  137                  | direct_declarator LEFT_PARENTHESES • identifier_list_opt RIGHT_PARANTHESES

    IDENTIFIER  shift, and go to state 195
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    BOOL        shift, and go to state 14
    COMPLEX     shift, and go to state 15
    IMAGINARY   shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    INLINE      shift, and go to state 20
    ENUM        shift, and go to state 21

    $default  reduce using rule 143 (identifier_list_opt)

    declaration_specifiers   go to state 196
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 197
    parameter_type_list      go to state 198
    parameter_list           go to state 199
    parameter_declaration    go to state 200
    identifier_list          go to state 201


State 108

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET • type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator LEFT_SQUARE_BRACKET • STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator LEFT_SQUARE_BRACKET • type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET • type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET

    STATIC    shift, and go to state 202
    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 203
    type_qualifier_list      go to state 204


State 109

  122 enumerator: IDENTIFIER EQUAL_TO • constant_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 206


State 110

  115 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA • RIGHT_CURLY_BRACE
  120 enumerator_list: enumerator_list COMMA • enumerator

    IDENTIFIER         shift, and go to state 62
    RIGHT_CURLY_BRACE  shift, and go to state 207

    enumerator  go to state 208


State 111

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE •

    $default  reduce using rule 114 (enum_specifier)


State 112

    6 primary_expression: LEFT_PARENTHESES • expression RIGHT_PARANTHESES
   14 postfix_expression: LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    ENUM              shift, and go to state 21
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    typename                   go to state 209


State 113

   21 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 21 (unary_expression)


State 114

   22 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 22 (unary_expression)


State 115

    6 primary_expression: LEFT_PARENTHESES • expression RIGHT_PARANTHESES
   14 postfix_expression: LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES • typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_PARENTHESES • typename RIGHT_PARANTHESES

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    ENUM              shift, and go to state 21
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    typename                   go to state 210


State 116

   24 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 24 (unary_expression)


State 117

   77 expression: assignment_expression •

    $default  reduce using rule 77 (expression)


State 118

    6 primary_expression: LEFT_PARENTHESES expression • RIGHT_PARANTHESES
   78 expression: expression • COMMA assignment_expression

    RIGHT_PARANTHESES  shift, and go to state 211
    COMMA              shift, and go to state 212


State 119

  110 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    ENUM       shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 119
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 214
    enum_specifier                go to state 26
    type_qualifier                go to state 121


State 120

  156 typename: specifier_qualifier_list •

    $default  reduce using rule 156 (typename)


State 121

  111 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    ENUM       shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 119
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 215
    enum_specifier                go to state 26
    type_qualifier                go to state 121


State 122

   14 postfix_expression: LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_PARENTHESES typename • RIGHT_PARANTHESES cast_expression

    RIGHT_PARANTHESES  shift, and go to state 216


State 123

  168 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 217


State 124

  167 designator: LEFT_SQUARE_BRACKET • constant_expression RIGHT_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 218


State 125

  158 initializer: LEFT_CURLY_BRACE initializer_list • RIGHT_CURLY_BRACE
  159            | LEFT_CURLY_BRACE initializer_list • COMMA RIGHT_CURLY_BRACE
  161 initializer_list: initializer_list • COMMA designation_opt initializer

    COMMA              shift, and go to state 219
    RIGHT_CURLY_BRACE  shift, and go to state 220


State 126

  160 initializer_list: designation_opt • initializer

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 78
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 221


State 127

  162 designation_opt: designation •

    $default  reduce using rule 162 (designation_opt)


State 128

  164 designation: designator_list • EQUAL_TO
  166 designator_list: designator_list • designator

    DOT                  shift, and go to state 123
    LEFT_SQUARE_BRACKET  shift, and go to state 124
    EQUAL_TO             shift, and go to state 222

    designator  go to state 223


State 129

  165 designator_list: designator •

    $default  reduce using rule 165 (designator_list)


State 130

   11 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 224


State 131

   12 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 12 (postfix_expression)


State 132

   13 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 13 (postfix_expression)


State 133

    9 postfix_expression: postfix_expression LEFT_PARENTHESES • argument_expression_list_opt RIGHT_PARANTHESES

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 17 (argument_expression_list_opt)

    primary_expression            go to state 85
    postfix_expression            go to state 86
    argument_expression_list_opt  go to state 225
    argument_expression_list      go to state 226
    unary_expression              go to state 87
    unary_operator                go to state 88
    cast_expression               go to state 89
    multiplicative_expression     go to state 90
    additive_expression           go to state 91
    shift_expression              go to state 92
    relational_expression         go to state 93
    equality_expression           go to state 94
    AND_expression                go to state 95
    exclusive_OR_expression       go to state 96
    inclusive_OR_expression       go to state 97
    logical_AND_expression        go to state 98
    logical_OR_expression         go to state 99
    conditional_expression        go to state 100
    assignment_expression         go to state 227


State 134

   10 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 135

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET • expression RIGHT_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 229


State 136

   67 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 67 (assignment_operator)


State 137

   68 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 68 (assignment_operator)


State 138

   69 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 69 (assignment_operator)


State 139

   70 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 70 (assignment_operator)


State 140

   71 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 71 (assignment_operator)


State 141

   72 assignment_operator: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 72 (assignment_operator)


State 142

   73 assignment_operator: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 73 (assignment_operator)


State 143

   74 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 74 (assignment_operator)


State 144

   75 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 75 (assignment_operator)


State 145

   76 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 76 (assignment_operator)


State 146

   66 assignment_operator: EQUAL_TO •

    $default  reduce using rule 66 (assignment_operator)


State 147

   65 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 230


State 148

   32 cast_expression: unary_expression •

    $default  reduce using rule 32 (cast_expression)


State 149

   23 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 23 (unary_expression)


State 150

   35 multiplicative_expression: multiplicative_expression ASTERISK • cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 231


State 151

   36 multiplicative_expression: multiplicative_expression FORWARD_SLASH • cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 232


State 152

   37 multiplicative_expression: multiplicative_expression MODULO • cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 233


State 153

   39 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 234


State 154

   40 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 235


State 155

   42 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 236


State 156

   43 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 237


State 157

   47 relational_expression: relational_expression LESS_EQUAL • shift_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 238


State 158

   48 relational_expression: relational_expression GREATER_EQUAL • shift_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 239


State 159

   45 relational_expression: relational_expression LESS_THAN • shift_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 240


State 160

   46 relational_expression: relational_expression GREATER_THAN • shift_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 241


State 161

   50 equality_expression: equality_expression ISEQUAL • relational_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 242


State 162

   51 equality_expression: equality_expression NOTEQUAL • relational_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 243


State 163

   53 AND_expression: AND_expression BITWISE_AND • equality_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 244


State 164

   55 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR • AND_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 245


State 165

   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR • exclusive_OR_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 246


State 166

   59 logical_AND_expression: logical_AND_expression LOGICAL_AND • inclusive_OR_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 247


State 167

   61 logical_OR_expression: logical_OR_expression LOGICAL_OR • logical_AND_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 248


State 168

   63 conditional_expression: logical_OR_expression QUESTION_MARK • expression COLON conditional_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 249


State 169

    1 primary_expression: IDENTIFIER •
  175 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 250

    $default  reduce using rule 1 (primary_expression)


State 170

  176 labeled_statement: CASE • constant_expression COLON statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 251


State 171

  177 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 252


State 172

  188 selection_statement: IF • LEFT_PARENTHESES expression RIGHT_PARANTHESES statement
  189                    | IF • LEFT_PARENTHESES expression RIGHT_PARANTHESES statement ELSE statement

    LEFT_PARENTHESES  shift, and go to state 253


State 173

  190 selection_statement: SWITCH • LEFT_PARENTHESES expression RIGHT_PARANTHESES statement

    LEFT_PARENTHESES  shift, and go to state 254


State 174

  193 iteration_statement: FOR • LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement
  194                    | FOR • LEFT_PARENTHESES declaration expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

    LEFT_PARENTHESES  shift, and go to state 255


State 175

  192 iteration_statement: DO • statement WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES SEMICOLON

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 256
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 176

  191 iteration_statement: WHILE • LEFT_PARENTHESES expression RIGHT_PARANTHESES statement

    LEFT_PARENTHESES  shift, and go to state 257


State 177

  195 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 258


State 178

  196 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 259


State 179

  197 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 260


State 180

  198 jump_statement: RETURN • expression_opt SEMICOLON

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    expression_opt             go to state 261


State 181

   78 expression: expression • COMMA assignment_expression
  186 expression_opt: expression •

    COMMA  shift, and go to state 212

    $default  reduce using rule 186 (expression_opt)


State 182

  183 block_item: declaration •

    $default  reduce using rule 183 (block_item)


State 183

  184 block_item: statement •

    $default  reduce using rule 184 (block_item)


State 184

  169 statement: labeled_statement •

    $default  reduce using rule 169 (statement)


State 185

  170 statement: compound_statement •

    $default  reduce using rule 170 (statement)


State 186

  178 compound_statement: LEFT_CURLY_BRACE block_item_list_opt • RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 262


State 187

  179 block_item_list_opt: block_item_list •
  182 block_item_list: block_item_list • block_item

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    EXTERN            shift, and go to state 1
    STATIC            shift, and go to state 2
    AUTO              shift, and go to state 3
    REGISTER          shift, and go to state 4
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    INLINE            shift, and go to state 20
    ENUM              shift, and go to state 21
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 179 (block_item_list_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    declaration                go to state 182
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 183
    labeled_statement          go to state 184
    compound_statement         go to state 185
    block_item                 go to state 263
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 188

  181 block_item_list: block_item •

    $default  reduce using rule 181 (block_item_list)


State 189

  171 statement: expression_statement •

    $default  reduce using rule 171 (statement)


State 190

  185 expression_statement: expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 264


State 191

  172 statement: selection_statement •

    $default  reduce using rule 172 (statement)


State 192

  173 statement: iteration_statement •

    $default  reduce using rule 173 (statement)


State 193

  174 statement: jump_statement •

    $default  reduce using rule 174 (statement)


State 194

  131 direct_declarator: LEFT_PARENTHESES declarator RIGHT_PARANTHESES •

    $default  reduce using rule 131 (direct_declarator)


State 195

  154 identifier_list: IDENTIFIER •

    $default  reduce using rule 154 (identifier_list)


State 196

  152 parameter_declaration: declaration_specifiers • declarator
  153                      | declaration_specifiers •

    ASTERISK  shift, and go to state 34

    RIGHT_PARANTHESES  reduce using rule 153 (parameter_declaration)
    COMMA              reduce using rule 153 (parameter_declaration)
    $default           reduce using rule 129 (pointer_opt)

    declarator   go to state 265
    pointer_opt  go to state 39
    pointer      go to state 40


State 197

  137 direct_declarator: direct_declarator LEFT_PARENTHESES identifier_list_opt • RIGHT_PARANTHESES

    RIGHT_PARANTHESES  shift, and go to state 266


State 198

  136 direct_declarator: direct_declarator LEFT_PARENTHESES parameter_type_list • RIGHT_PARANTHESES

    RIGHT_PARANTHESES  shift, and go to state 267


State 199

  148 parameter_type_list: parameter_list •
  149                    | parameter_list • COMMA ELLIPSIS
  151 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 268

    $default  reduce using rule 148 (parameter_type_list)


State 200

  150 parameter_list: parameter_declaration •

    $default  reduce using rule 150 (parameter_list)


State 201

  142 identifier_list_opt: identifier_list •
  155 identifier_list: identifier_list • COMMA IDENTIFIER

    COMMA  shift, and go to state 269

    $default  reduce using rule 142 (identifier_list_opt)


State 202

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC • type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 270
    type_qualifier_list      go to state 51


State 203

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt • assignment_expression_opt RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt • ASTERISK RIGHT_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 271
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 141 (assignment_expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 272
    assignment_expression_opt  go to state 273


State 204

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list • STATIC assignment_expression RIGHT_SQUARE_BRACKET
  138 type_qualifier_list_opt: type_qualifier_list •
  147 type_qualifier_list: type_qualifier_list • type_qualifier

    STATIC    shift, and go to state 274
    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 205

   79 constant_expression: conditional_expression •

    $default  reduce using rule 79 (constant_expression)


State 206

  122 enumerator: IDENTIFIER EQUAL_TO constant_expression •

    $default  reduce using rule 122 (enumerator)


State 207

  115 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE •

    $default  reduce using rule 115 (enum_specifier)


State 208

  120 enumerator_list: enumerator_list COMMA enumerator •

    $default  reduce using rule 120 (enumerator_list)


State 209

   14 postfix_expression: LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_PARANTHESES  shift, and go to state 275


State 210

   14 postfix_expression: LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename • RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_PARENTHESES typename • RIGHT_PARANTHESES

    RIGHT_PARANTHESES  shift, and go to state 276


State 211

    6 primary_expression: LEFT_PARENTHESES expression RIGHT_PARANTHESES •

    $default  reduce using rule 6 (primary_expression)


State 212

   78 expression: expression COMMA • assignment_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 277


State 213

  112 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 112 (specifier_qualifier_list_opt)


State 214

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 110 (specifier_qualifier_list)


State 215

  111 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 111 (specifier_qualifier_list)


State 216

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES • cast_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 278
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 279


State 217

  168 designator: DOT IDENTIFIER •

    $default  reduce using rule 168 (designator)


State 218

  167 designator: LEFT_SQUARE_BRACKET constant_expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 280


State 219

  159 initializer: LEFT_CURLY_BRACE initializer_list COMMA • RIGHT_CURLY_BRACE
  161 initializer_list: initializer_list COMMA • designation_opt initializer

    DOT                  shift, and go to state 123
    LEFT_SQUARE_BRACKET  shift, and go to state 124
    RIGHT_CURLY_BRACE    shift, and go to state 281

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 282
    designation      go to state 127
    designator_list  go to state 128
    designator       go to state 129


State 220

  158 initializer: LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE •

    $default  reduce using rule 158 (initializer)


State 221

  160 initializer_list: designation_opt initializer •

    $default  reduce using rule 160 (initializer_list)


State 222

  164 designation: designator_list EQUAL_TO •

    $default  reduce using rule 164 (designation)


State 223

  166 designator_list: designator_list designator •

    $default  reduce using rule 166 (designator_list)


State 224

   11 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 225

    9 postfix_expression: postfix_expression LEFT_PARENTHESES argument_expression_list_opt • RIGHT_PARANTHESES

    RIGHT_PARANTHESES  shift, and go to state 283


State 226

   16 argument_expression_list_opt: argument_expression_list •
   19 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 284

    $default  reduce using rule 16 (argument_expression_list_opt)


State 227

   18 argument_expression_list: assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 228

   10 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 10 (postfix_expression)


State 229

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET expression • RIGHT_SQUARE_BRACKET
   78 expression: expression • COMMA assignment_expression

    COMMA                 shift, and go to state 212
    RIGHT_SQUARE_BRACKET  shift, and go to state 285


State 230

   65 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 65 (assignment_expression)


State 231

   35 multiplicative_expression: multiplicative_expression ASTERISK cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 232

   36 multiplicative_expression: multiplicative_expression FORWARD_SLASH cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 233

   37 multiplicative_expression: multiplicative_expression MODULO cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 234

   35 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   36                          | multiplicative_expression • FORWARD_SLASH cast_expression
   37                          | multiplicative_expression • MODULO cast_expression
   39 additive_expression: additive_expression PLUS multiplicative_expression •

    ASTERISK       shift, and go to state 150
    FORWARD_SLASH  shift, and go to state 151
    MODULO         shift, and go to state 152

    $default  reduce using rule 39 (additive_expression)


State 235

   35 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   36                          | multiplicative_expression • FORWARD_SLASH cast_expression
   37                          | multiplicative_expression • MODULO cast_expression
   40 additive_expression: additive_expression MINUS multiplicative_expression •

    ASTERISK       shift, and go to state 150
    FORWARD_SLASH  shift, and go to state 151
    MODULO         shift, and go to state 152

    $default  reduce using rule 40 (additive_expression)


State 236

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 42 (shift_expression)


State 237

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 43 (shift_expression)


State 238

   42 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   43                 | shift_expression • RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 47 (relational_expression)


State 239

   42 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   43                 | shift_expression • RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 48 (relational_expression)


State 240

   42 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   43                 | shift_expression • RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 45 (relational_expression)


State 241

   42 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   43                 | shift_expression • RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 46 (relational_expression)


State 242

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   50 equality_expression: equality_expression ISEQUAL relational_expression •

    LESS_EQUAL     shift, and go to state 157
    GREATER_EQUAL  shift, and go to state 158
    LESS_THAN      shift, and go to state 159
    GREATER_THAN   shift, and go to state 160

    $default  reduce using rule 50 (equality_expression)


State 243

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   51 equality_expression: equality_expression NOTEQUAL relational_expression •

    LESS_EQUAL     shift, and go to state 157
    GREATER_EQUAL  shift, and go to state 158
    LESS_THAN      shift, and go to state 159
    GREATER_THAN   shift, and go to state 160

    $default  reduce using rule 51 (equality_expression)


State 244

   50 equality_expression: equality_expression • ISEQUAL relational_expression
   51                    | equality_expression • NOTEQUAL relational_expression
   53 AND_expression: AND_expression BITWISE_AND equality_expression •

    ISEQUAL   shift, and go to state 161
    NOTEQUAL  shift, and go to state 162

    $default  reduce using rule 53 (AND_expression)


State 245

   53 AND_expression: AND_expression • BITWISE_AND equality_expression
   55 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR AND_expression •

    BITWISE_AND  shift, and go to state 163

    $default  reduce using rule 55 (exclusive_OR_expression)


State 246

   55 exclusive_OR_expression: exclusive_OR_expression • BITWISE_XOR AND_expression
   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression •

    BITWISE_XOR  shift, and go to state 164

    $default  reduce using rule 57 (inclusive_OR_expression)


State 247

   57 inclusive_OR_expression: inclusive_OR_expression • BITWISE_OR exclusive_OR_expression
   59 logical_AND_expression: logical_AND_expression LOGICAL_AND inclusive_OR_expression •

    BITWISE_OR  shift, and go to state 165

    $default  reduce using rule 59 (logical_AND_expression)


State 248

   59 logical_AND_expression: logical_AND_expression • LOGICAL_AND inclusive_OR_expression
   61 logical_OR_expression: logical_OR_expression LOGICAL_OR logical_AND_expression •

    LOGICAL_AND  shift, and go to state 166

    $default  reduce using rule 61 (logical_OR_expression)


State 249

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression • COLON conditional_expression
   78 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 212
    COLON  shift, and go to state 286


State 250

  175 labeled_statement: IDENTIFIER COLON • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 287
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 251

  176 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 288


State 252

  177 labeled_statement: DEFAULT COLON • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 289
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 253

  188 selection_statement: IF LEFT_PARENTHESES • expression RIGHT_PARANTHESES statement
  189                    | IF LEFT_PARENTHESES • expression RIGHT_PARANTHESES statement ELSE statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 290


State 254

  190 selection_statement: SWITCH LEFT_PARENTHESES • expression RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 291


State 255

  193 iteration_statement: FOR LEFT_PARENTHESES • expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement
  194                    | FOR LEFT_PARENTHESES • declaration expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    EXTERN            shift, and go to state 1
    STATIC            shift, and go to state 2
    AUTO              shift, and go to state 3
    REGISTER          shift, and go to state 4
    VOID              shift, and go to state 5
    CHAR              shift, and go to state 6
    SHORT             shift, and go to state 7
    INT               shift, and go to state 8
    LONG              shift, and go to state 9
    FLOAT             shift, and go to state 10
    DOUBLE            shift, and go to state 11
    SIGNED            shift, and go to state 12
    UNSIGNED          shift, and go to state 13
    BOOL              shift, and go to state 14
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 16
    CONST             shift, and go to state 17
    RESTRICT          shift, and go to state 18
    VOLATILE          shift, and go to state 19
    INLINE            shift, and go to state 20
    ENUM              shift, and go to state 21
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    declaration                go to state 292
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 293


State 256

  192 iteration_statement: DO statement • WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES SEMICOLON

    WHILE  shift, and go to state 294


State 257

  191 iteration_statement: WHILE LEFT_PARENTHESES • expression RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 295


State 258

  195 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 296


State 259

  196 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 196 (jump_statement)


State 260

  197 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 197 (jump_statement)


State 261

  198 jump_statement: RETURN expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 297


State 262

  178 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE •

    $default  reduce using rule 178 (compound_statement)


State 263

  182 block_item_list: block_item_list block_item •

    $default  reduce using rule 182 (block_item_list)


State 264

  185 expression_statement: expression_opt SEMICOLON •

    $default  reduce using rule 185 (expression_statement)


State 265

  152 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 152 (parameter_declaration)


State 266

  137 direct_declarator: direct_declarator LEFT_PARENTHESES identifier_list_opt RIGHT_PARANTHESES •

    $default  reduce using rule 137 (direct_declarator)


State 267

  136 direct_declarator: direct_declarator LEFT_PARENTHESES parameter_type_list RIGHT_PARANTHESES •

    $default  reduce using rule 136 (direct_declarator)


State 268

  149 parameter_type_list: parameter_list COMMA • ELLIPSIS
  151 parameter_list: parameter_list COMMA • parameter_declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ELLIPSIS   shift, and go to state 298
    ENUM       shift, and go to state 21

    declaration_specifiers   go to state 196
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 299


State 269

  155 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 300


State 270

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt • assignment_expression RIGHT_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 301


State 271

   27 unary_operator: ASTERISK •
  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 302

    $default  reduce using rule 27 (unary_operator)


State 272

  140 assignment_expression_opt: assignment_expression •

    $default  reduce using rule 140 (assignment_expression_opt)


State 273

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 303


State 274

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC • assignment_expression RIGHT_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 304


State 275

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 278


State 276

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES • LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_PARENTHESES typename RIGHT_PARANTHESES •

    LEFT_CURLY_BRACE  shift, and go to state 278

    $default  reduce using rule 25 (unary_expression)


State 277

   78 expression: expression COMMA assignment_expression •

    $default  reduce using rule 78 (expression)


State 278

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE • initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE • initializer_list COMMA RIGHT_CURLY_BRACE

    DOT                  shift, and go to state 123
    LEFT_SQUARE_BRACKET  shift, and go to state 124

    $default  reduce using rule 163 (designation_opt)

    initializer_list  go to state 305
    designation_opt   go to state 126
    designation       go to state 127
    designator_list   go to state 128
    designator        go to state 129


State 279

   33 cast_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES cast_expression •

    $default  reduce using rule 33 (cast_expression)


State 280

  167 designator: LEFT_SQUARE_BRACKET constant_expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 167 (designator)


State 281

  159 initializer: LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE •

    $default  reduce using rule 159 (initializer)


State 282

  161 initializer_list: initializer_list COMMA designation_opt • initializer

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 78
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 306


State 283

    9 postfix_expression: postfix_expression LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARANTHESES •

    $default  reduce using rule 9 (postfix_expression)


State 284

   19 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 307


State 285

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 8 (postfix_expression)


State 286

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON • conditional_expression

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 308


State 287

  175 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 175 (labeled_statement)


State 288

  176 labeled_statement: CASE constant_expression COLON • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 309
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 289

  177 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 177 (labeled_statement)


State 290

   78 expression: expression • COMMA assignment_expression
  188 selection_statement: IF LEFT_PARENTHESES expression • RIGHT_PARANTHESES statement
  189                    | IF LEFT_PARENTHESES expression • RIGHT_PARANTHESES statement ELSE statement

    RIGHT_PARANTHESES  shift, and go to state 310
    COMMA              shift, and go to state 212


State 291

   78 expression: expression • COMMA assignment_expression
  190 selection_statement: SWITCH LEFT_PARENTHESES expression • RIGHT_PARANTHESES statement

    RIGHT_PARANTHESES  shift, and go to state 311
    COMMA              shift, and go to state 212


State 292

  194 iteration_statement: FOR LEFT_PARENTHESES declaration • expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    expression_opt             go to state 312


State 293

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt • SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

    SEMICOLON  shift, and go to state 313


State 294

  192 iteration_statement: DO statement WHILE • LEFT_PARENTHESES expression RIGHT_PARANTHESES SEMICOLON

    LEFT_PARENTHESES  shift, and go to state 314


State 295

   78 expression: expression • COMMA assignment_expression
  191 iteration_statement: WHILE LEFT_PARENTHESES expression • RIGHT_PARANTHESES statement

    RIGHT_PARANTHESES  shift, and go to state 315
    COMMA              shift, and go to state 212


State 296

  195 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 195 (jump_statement)


State 297

  198 jump_statement: RETURN expression_opt SEMICOLON •

    $default  reduce using rule 198 (jump_statement)


State 298

  149 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 149 (parameter_type_list)


State 299

  151 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 151 (parameter_list)


State 300

  155 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 155 (identifier_list)


State 301

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 316


State 302

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 135 (direct_declarator)


State 303

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 132 (direct_declarator)


State 304

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 317


State 305

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list • RIGHT_CURLY_BRACE
   15                   | LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list • COMMA RIGHT_CURLY_BRACE
  161 initializer_list: initializer_list • COMMA designation_opt initializer

    COMMA              shift, and go to state 318
    RIGHT_CURLY_BRACE  shift, and go to state 319


State 306

  161 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 161 (initializer_list)


State 307

   19 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 308

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression •

    $default  reduce using rule 63 (conditional_expression)


State 309

  176 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 176 (labeled_statement)


State 310

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARANTHESES • statement
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARANTHESES • statement ELSE statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 320
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 311

  190 selection_statement: SWITCH LEFT_PARENTHESES expression RIGHT_PARANTHESES • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 321
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 312

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt • SEMICOLON expression_opt RIGHT_PARANTHESES statement

    SEMICOLON  shift, and go to state 322


State 313

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON • expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    expression_opt             go to state 323


State 314

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES • expression RIGHT_PARANTHESES SEMICOLON

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 324


State 315

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 325
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 316

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 133 (direct_declarator)


State 317

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 134 (direct_declarator)


State 318

   15 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA • RIGHT_CURLY_BRACE
  161 initializer_list: initializer_list COMMA • designation_opt initializer

    DOT                  shift, and go to state 123
    LEFT_SQUARE_BRACKET  shift, and go to state 124
    RIGHT_CURLY_BRACE    shift, and go to state 326

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 282
    designation      go to state 127
    designator_list  go to state 128
    designator       go to state 129


State 319

   14 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE •

    $default  reduce using rule 14 (postfix_expression)


State 320

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement •
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement • ELSE statement

    ELSE  shift, and go to state 327

    $default  reduce using rule 188 (selection_statement)


State 321

  190 selection_statement: SWITCH LEFT_PARENTHESES expression RIGHT_PARANTHESES statement •

    $default  reduce using rule 190 (selection_statement)


State 322

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMICOLON • expression_opt RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    expression_opt             go to state 328


State 323

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt • SEMICOLON expression_opt RIGHT_PARANTHESES statement

    SEMICOLON  shift, and go to state 329


State 324

   78 expression: expression • COMMA assignment_expression
  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression • RIGHT_PARANTHESES SEMICOLON

    RIGHT_PARANTHESES  shift, and go to state 330
    COMMA              shift, and go to state 212


State 325

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES statement •

    $default  reduce using rule 191 (iteration_statement)


State 326

   15 postfix_expression: LEFT_PARENTHESES typename RIGHT_PARANTHESES LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE •

    $default  reduce using rule 15 (postfix_expression)


State 327

  189 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement ELSE • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 331
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 328

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMICOLON expression_opt • RIGHT_PARANTHESES statement

    RIGHT_PARANTHESES  shift, and go to state 332


State 329

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON • expression_opt RIGHT_PARANTHESES statement

    IDENTIFIER        shift, and go to state 69
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    LEFT_PARENTHESES  shift, and go to state 77
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    expression_opt             go to state 333


State 330

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES • SEMICOLON

    SEMICOLON  shift, and go to state 334


State 331

  189 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARANTHESES statement ELSE statement •

    $default  reduce using rule 189 (selection_statement)


State 332

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 335
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 333

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON expression_opt • RIGHT_PARANTHESES statement

    RIGHT_PARANTHESES  shift, and go to state 336


State 334

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARANTHESES SEMICOLON •

    $default  reduce using rule 192 (iteration_statement)


State 335

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement •

    $default  reduce using rule 194 (iteration_statement)


State 336

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES • statement

    IDENTIFIER        shift, and go to state 169
    INT_CONSTANT      shift, and go to state 70
    FLOAT_CONSTANT    shift, and go to state 71
    CHAR_CONSTANT     shift, and go to state 72
    STRING_LITERAL    shift, and go to state 73
    INCREMENT         shift, and go to state 74
    DECREMENT         shift, and go to state 75
    SIZEOF            shift, and go to state 76
    CASE              shift, and go to state 170
    DEFAULT           shift, and go to state 171
    IF                shift, and go to state 172
    SWITCH            shift, and go to state 173
    FOR               shift, and go to state 174
    DO                shift, and go to state 175
    WHILE             shift, and go to state 176
    GOTO              shift, and go to state 177
    CONTINUE          shift, and go to state 178
    BREAK             shift, and go to state 179
    RETURN            shift, and go to state 180
    LEFT_PARENTHESES  shift, and go to state 77
    LEFT_CURLY_BRACE  shift, and go to state 103
    BITWISE_AND       shift, and go to state 79
    ASTERISK          shift, and go to state 80
    PLUS              shift, and go to state 81
    MINUS             shift, and go to state 82
    TILDE             shift, and go to state 83
    EXCLAMATORY_MARK  shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 117
    expression                 go to state 181
    statement                  go to state 337
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 337

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RIGHT_PARANTHESES statement •

    $default  reduce using rule 193 (iteration_statement)
